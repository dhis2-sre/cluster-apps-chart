# Default values for cluster-apps.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

ingress-nginx:
  controller:
    service:
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: "*"
    config:
      use-proxy-protocol: true
      real-ip-header: proxy_protocol
    ingressClassResource:
      default: true
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        additionalLabels:
          release: cluster-apps

cert-manager:
  installCRDs: true

cert-issuer-prod:
  email: andreas@dhis2.org
  server: https://acme-v02.api.letsencrypt.org/directory
  # Unsetting the ingressClass value, in order to use default ingress class.
  ingressClass: ""

kube-prometheus-stack:
  grafana:
    persistence:
      enabled: true
      size: 20Gi
      finalizers:
        - kubernetes.io/pvc-protection
    ingress:
      enabled: true
      hosts:
        - grafana.im.dhis2.org
      annotations:
        cert-manager.io/cluster-issuer: cert-issuer-prod
        ingress.kubernetes.io/ssl-redirect: "true"
      tls:
        - secretName: grafana-im-dhis2-org-tls
          hosts:
            - grafana.im.dhis2.org
    adminUser: admin
    adminPassword: # Leave empty for autogenerated password
  promtail:
    config:
      clients:
        - url: http://{{ .Release.Name }}-loki:3100/loki/api/v1/push
  prometheus:
    prometheusSpec:
      podMonitorSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false

loki:
  loki:
    commonConfig:
      replication_factor: 1
    schemaConfig:
      configs:
        - from: "2024-04-01"
          store: tsdb
          object_store: s3
          schema: v13
          index:
            prefix: loki_index_
            period: 24h
    pattern_ingester:
      enabled: true
    limits_config:
      allow_structured_metadata: true
      volume_enabled: true
      retention_period: 672h # 28 days retention
    compactor:
      retention_enabled: true
      delete_request_store: s3
    ruler:
      enable_api: true

  minio:
    enabled: true
    persistence:
      size: 10Gi

  deploymentMode: SingleBinary

  singleBinary:
    replicas: 1

  # Zero out replica counts of other deployment modes
  backend:
    replicas: 0
  read:
    replicas: 0
  write:
    replicas: 0

  ingester:
    replicas: 0
  querier:
    replicas: 0
  queryFrontend:
    replicas: 0
  queryScheduler:
    replicas: 0
  distributor:
    replicas: 0
  compactor:
    replicas: 0
  indexGateway:
    replicas: 0
  bloomCompactor:
    replicas: 0
  bloomGateway:
    replicas: 0
